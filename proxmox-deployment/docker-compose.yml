version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: clinichub-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: clinichub
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - clinichub
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    image: clinichub-backend:latest
    container_name: clinichub-backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      # Database
      MONGO_URL: mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/clinichub?authSource=admin
      
      # Application
      ENV: PRODUCTION
      HOST: 0.0.0.0
      PORT: 8001
      DEBUG: "false"
      
      # Security
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      
      # CORS
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN}
      
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - clinichub
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend (Static Files)
  frontend:
    image: nginx:alpine
    container_name: clinichub-frontend
    restart: unless-stopped
    volumes:
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./nginx-frontend.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - clinichub

  # Caddy Reverse Proxy
  proxy:
    image: caddy:2-alpine
    container_name: clinichub-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frontend/build:/var/www/alpine-chub:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - clinichub
    depends_on:
      - backend
      - frontend
    environment:
      - DOMAIN=${DOMAIN}

volumes:
  mongodb_data:
  backend_uploads:
  backend_logs:
  caddy_data:
  caddy_config:

networks:
  clinichub:
    driver: bridge