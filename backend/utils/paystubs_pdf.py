from io import BytesIO
from reportlab.lib.pagesizes import LETTER
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch

DEFAULT_CLINIC = {
    "name": "Clínica Familia y Salud",
    "address": "13626 Veterans Memorial Dr Suite F, Houston, TX 77014",
    "phone": "(281) 580-8880",
    "email": "info@clinicafamiliaysalud.com",
}

def _line(c, x1, y1, x2, y2):
    c.line(x1, y1, x2, y2)

def _label_val(c, x, y, label, val):
    c.setFont("Helvetica", 9)
    c.drawString(x, y, f"{label}:")
    c.setFont("Helvetica-Bold", 10)
    c.drawRightString(7.75*inch, y, str(val) if val is not None else "")

def _money(v):
    try:
        return f"${float(v):,.2f}"
    except Exception:
        return str(v)

def render_paystubs_pdf(stubs: list[dict], clinic_info: dict | None = None) -> bytes:
    """
    Each item in stubs should include at least:
      employee_id, period{start_date,end_date}, gross, deductions, taxes, net, run_id, record_id
    Missing fields are treated as 0/empty.
    """
    clinic = {**DEFAULT_CLINIC, **(clinic_info or {})}
    buf = BytesIO()
    c = canvas.Canvas(buf, pagesize=LETTER)
    width, height = LETTER

    for s in stubs or []:
        c.setTitle("ClinicHub Paystub")

        # Header
        c.setFont("Helvetica-Bold", 14)
        c.drawString(1*inch, 10.5*inch, clinic["name"])
        c.setFont("Helvetica", 9)
        c.drawString(1*inch, 10.2*inch, clinic["address"])
        c.drawString(1*inch, 10.0*inch, f"{clinic['phone']} • {clinic['email']}")
        _line(c, 1*inch, 9.85*inch, 7.75*inch, 9.85*inch)

        # Employee & period
        y = 9.55*inch
        _label_val(c, 1*inch, y, "Employee", s.get("employee_id") or s.get("employee"))
        y -= 0.2*inch
        period = s.get("period") or {}
        _label_val(c, 1*inch, y, "Period",
                   f"{period.get('start_date','?')} → {period.get('end_date','?')}")
        y -= 0.2*inch
        _label_val(c, 1*inch, y, "Run ID", s.get("run_id"))
        y -= 0.2*inch
        _label_val(c, 1*inch, y, "Record ID", s.get("record_id"))

        # Totals box
        y -= 0.3*inch
        _line(c, 1*inch, y, 7.75*inch, y)   # top
        y -= 0.15*inch
        _label_val(c, 1*inch, y, "Gross", _money(s.get("gross", 0)))
        y -= 0.2*inch
        _label_val(c, 1*inch, y, "Pre/Post Deductions", _money(s.get("deductions", 0)))
        y -= 0.2*inch
        _label_val(c, 1*inch, y, "Taxes", _money(s.get("taxes", 0)))
        y -= 0.2*inch
        _label_val(c, 1*inch, y, "Net Pay", _money(s.get("net", 0)))
        y -= 0.15*inch
        _line(c, 1*inch, y, 7.75*inch, y)   # bottom

        # Footer
        c.setFont("Helvetica-Oblique", 8)
        c.drawString(1*inch, 0.8*inch,
                     "Generated by ClinicHub • For employee records only • Contact HR for questions.")
        c.showPage()

    c.save()
    return buf.getvalue()